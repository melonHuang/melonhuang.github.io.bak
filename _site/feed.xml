<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MelonSpace</title>
    <description>Enjoy everyday
</description>
    <link>http://melonhuang.github.io//</link>
    <atom:link href="http://melonhuang.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 20 Feb 2017 22:49:11 +0800</pubDate>
    <lastBuildDate>Mon, 20 Feb 2017 22:49:11 +0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title> Margin折叠，站在设计者的角度思考</title>
        <description>&lt;p&gt;大部分前端开发者在实现布局时，都会遇到Margin折叠的问题。CSS2.1标准文档中对Margin折叠的规则进行了标准的描述，但却没有解释这样设计的原因。使得我们想要摸清楚Margin折叠规则变得异常困难，通常需要死记硬背。
博主本人非常懒，这两天终于下定决心动动瓜脑子研究透彻Margin折叠。本篇文章我试图站在设计者的角度思考Margin折叠的设计思想，帮助自己和大家一起理解Margin折叠，抛开那些死记硬背。&lt;/p&gt;

&lt;h2&gt;标准文档对Margin的规定&lt;/h2&gt;

&lt;p&gt;首先，我们看看标准文档对Margin的定义：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;原文：The width of the margin on non-floating block-level elements specifies the minimum distance to the edges of surrounding boxes. Two or more adjoining vertical margins (i.e., with no border, padding or content between them) are collapsed to use the maximum of the margin values. In most cases, after collapsing the vertical margins the result is visually more pleasing and closer to what the designer expects.
翻译：外边距用来指定非浮动元素与其周围盒子边缘的最小距离。两个或两个以上的相邻的垂直外边距会被折叠并使用它们之间最大的那个外边距值。多数情况下，折叠垂直外边距可以在视觉上显得更美观，也更贴近设计师的预期。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;
如文档所说，margin是非浮动元素与周围盒子边缘的&lt;strong&gt;“最小”&lt;/strong&gt;边距哦。它定义的只是外边距的最小值。&lt;/p&gt;

&lt;h3&gt;为什么要有Margin折叠？&lt;/h3&gt;

&lt;p&gt;只有垂直Margin会发生折叠，而水平Margin则不会。这是为了排版的需要，因为在多数情况下，折叠垂直外边距可以在视觉上显得更美观，也更贴近设计师的预期。&lt;/p&gt;

&lt;h3&gt;Margin折叠规则&lt;/h3&gt;

&lt;p&gt;这里列出标准文档中的Margin折叠规则。快速浏览即可:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Two margins are adjoining if and only if:
1. both belong to in-flow block-level boxes that participate in the same block formatting context
2. no line boxes, no clearance, no padding and no border separate them (Note that certain zero-height line boxes (see 9.4.2) are ignored for this purpose.)
3. both belong to vertically-adjacent box edges, i.e. form one of the following pairs:
    * top margin of a box and top margin of its first in-flow child
    * bottom margin of box and top margin of its next in-flow following sibling
    * bottom margin of a last in-flow child and bottom margin of its parent if the parent has &amp;#39;auto&amp;#39; computed height
    * top and bottom margins of a box that does not establish a new block formatting context and that has zero computed &amp;#39;min-height&amp;#39;, zero or &amp;#39;auto&amp;#39; computed &amp;#39;height&amp;#39;, and no in-flow children&lt;br /&gt;
Note the above rules imply that:
1. Margins between a floated box and any other box do not collapse (not even between a float and its in-flow children).
2. Margins of elements that establish new block formatting contexts (such as floats and elements with &amp;#39;overflow&amp;#39; other than &amp;#39;visible&amp;#39;) do not collapse with their in-flow children.
3. Margins of absolutely positioned boxes do not collapse (not even with their in-flow children).
4. Margins of inline-block boxes do not collapse (not even with their in-flow children).
5. The bottom margin of an in-flow block-level element always collapses with the top margin of its next in-flow block-level sibling, unless that sibling has clearance.
6. The top margin of an in-flow block element collapses with its first in-flow block-level child&amp;#39;s top margin if the element has no top border, no top padding, and the child has no clearance.
7. The bottom margin of an in-flow block box with a &amp;#39;height&amp;#39; of &amp;#39;auto&amp;#39; and a &amp;#39;min-height&amp;#39; of zero collapses with its last in-flow block-level child&amp;#39;s bottom margin if the box has no bottom padding and no bottom border and the child&amp;#39;s bottom margin does not collapse with a top margin that has clearance.
8. A box&amp;#39;s own margins collapse if the &amp;#39;min-height&amp;#39; property is zero, and it has neither top or bottom borders nor top or bottom padding, and it has a &amp;#39;height&amp;#39; of either 0 or &amp;#39;auto&amp;#39;, and it does not contain a line box, and all of its in-flow children&amp;#39;s margins (if any) collapse.&lt;/p&gt;

&lt;p&gt;翻译：
两个Margin当且只有符合以下规则时，才会发生折叠:
1. 都属于文档流中的块级盒子，并且属于同一个BFC。
2. 无line box, clearance, padding, border分离它们
3. 都属于垂直相邻的盒子边界&lt;br /&gt;
以上的规则暗示了：
1. 浮动盒子不会跟其它盒子发生margin折叠（即使是于它的子元素）。
2. 创建BFC的盒子（如浮动根元素和overflow不为visible的元素）的Margin不会跟它的子元素发生margin折叠。
3. 绝对定位的盒子不会发生margin折叠（即使与它的子元素）。
4. display为inline-block的元素不会发生margin折叠（即使与它的子元素）。
5. 文档流中的会计元素的bottom margin总会和它的下一个文档流中的兄弟元素的top margin折叠，除非这个兄弟元素有clearance
6. 如果文档流中一个元素没有top border, top padding，且它的子元素没有clearance，那么它的top margin会与它的第一个文档流中的块级子元素的top margin折叠。
7. 如果文档流中的一个元素的高度为auto，min-height为0，且它没有bottom padding和bottom border，且它的子元素的bottom margin没有与拥有
8. 当一个盒子的min-height为0，没有top或bottom borders，没有top或bottom padding，height为0或auto，不包含line box，且它的所有文档流中的子孙元素的margin都折叠了，那么它自己的top margin和bottom margin会折叠。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Margin设计思想-我的理解&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;只有文档流中的块级元素会发生Margin折叠
文档流外的元素，我们将它们看作是希望有特殊定位的元素，不应该应用文档流中常规文档的排版规则。因此， float不为none，或者position为absolute的元素，不会与兄弟元素发生margin折叠。&lt;/p&gt;

&lt;p&gt;display为inline-block的元素参与渲染上下文是Inline block center。其垂直位置不仅依赖于Margin，还依赖于自己所属的line box。因此也不应发生margin折叠。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建BFC的元素，不会与子元素发生margin折叠&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;BFC(Block formatting context)直译为&amp;quot;块级格式化上下文&amp;quot;。它是一个独立的渲染区域，只有Block-level box参与， 它规定了内部的Block-level Box如何布局，并且与这个区域外部毫不相干。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;如标准文档所说，BFC是一个独立的渲染区域，它内部的元素与这个区域外毫不相干，不会相互影响。因此，创建BFC元素ElementA，它的子元素的margin，不应该影响ElementA与其兄弟元素或父元素之间的间距。&lt;/p&gt;

&lt;p&gt;所以，符合以下条件触发BFC的元素，都不会与自己的子元素发生margin折叠：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;float属性不为none&lt;/li&gt;
&lt;li&gt;position为absolute或fixed&lt;/li&gt;
&lt;li&gt;display为inline-block, table-cell,&lt;/li&gt;
&lt;li&gt;table-caption, flex, inline-flex&lt;/li&gt;
&lt;li&gt;overflow不为visible&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当元素之间产生间隙时，可能不会发生margin折叠
元素之间可能由如下原因产生间隙：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;两个元素的margin之间存在border或padding阻挡时，两个元素的margin无法折叠。&lt;/li&gt;
&lt;li&gt;两个元素相邻，第二个元素由于设置了clear不为none，被浮动的元素挤下去，与第一个元素的margin可能折叠不完全，或者不折叠。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;防止Margin折叠&lt;/h2&gt;

&lt;p&gt;如上所说：
1. 只有文档流中的块级元素会发生Margin折叠
    因此可通过将元素从文档流中去除，或者display设为inline-block的方式，防止其与兄弟节点发生margin折叠。
2. 创建BFC的元素，不会与子元素发生margin折叠
    因此可通过触发元素的BFC，来防止它与自己的子元素发生Margin折叠
3. 当元素之间产生间隙时，可能不会发生margin折叠
    因此可通过padding,border来制造间隙，以防止margin折叠&lt;/p&gt;

&lt;h2&gt;总结&lt;/h2&gt;

&lt;p&gt;这篇文章是我试图站在设计者的角度，对Margin折叠设计思想的理解。避免死记硬背这些规则。大家如果有不同的理解，欢迎讨论。&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Apr 2015 00:00:00 +0800</pubDate>
        <link>http://melonhuang.github.io//css/2015/04/28/understand-margin-collapse.html</link>
        <guid isPermaLink="true">http://melonhuang.github.io//css/2015/04/28/understand-margin-collapse.html</guid>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>网页显示大小的变化，从PC到Mobile-第一部分</title>
        <description>&lt;p&gt;手机、pad等移动设备已成为生活中必不可缺少一部分。与传统PC相比，这类设备的尺寸小很多, 分辨率也有略微差别。
那么网页中一个宽度为100px的按钮，在手机上显示，与在PC上显示，视觉上相差多少呢？&lt;/p&gt;

&lt;p&gt;网页大小的变化要从两个方面来分析：&lt;br&gt;
1. 屏幕参数dpi, dip&lt;br&gt;
2. 网页缩放&lt;/p&gt;

&lt;p&gt;这篇文章先在网页缩放比例为100%的基础上解释屏幕参数对网页显示大小的影响。&lt;/p&gt;

&lt;p&gt;该文章的第二部分（未出）将会解释网页缩放原理，敬请期待。咯咯咯~~&lt;/p&gt;

&lt;h2&gt;理解屏幕参数&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;屏幕尺寸&lt;br&gt;
意义：用户屏幕的整体大小。数值为屏幕对角线长度。&lt;br&gt;
eg: iphone5 4inch，是指iphone5对角线的长度为4inc&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分辨率(Resolution)&lt;br&gt;
意义：用户屏幕有多少个物理像素（可以发光的点）。&lt;br&gt;
eg. 1980*1080分辨率，代表水平方向有1980个像素长度，垂直方向有1080个像素长度。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dpi(dots per inch)/ppi(pixel per inch)&lt;br&gt;
意义：每英寸有多少个像素点。即屏幕像素密度。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;移动设备屏幕参数带来得问题&lt;/h2&gt;

&lt;p&gt;以iphone5和iMac为例：
| 手机\参数|尺寸（英寸）|分辨率|  屏幕密度dpi|
| ---- | ---- | ---- | ---- | 
|iphone5  |4     | 1136 * 640|326|
|iMac       |21.5| 1980 * 1080| 102|&lt;/p&gt;

&lt;p&gt;iphone5的屏幕密度dpi比iMac的要高三倍左右，换过来说，1px在iphone5上显示的宽度要是iMac上的1/3左右。 &lt;/p&gt;

&lt;p&gt;于是带来了一个问题，&lt;strong&gt;同样像素宽度的元素，在手机上看起来比PC上小很多&lt;/strong&gt;。16px的字体，在手机上看好像pc上的5px，难以阅读！&lt;/p&gt;

&lt;h2&gt;dip—不依赖设备的长度单位&lt;/h2&gt;

&lt;p&gt;为了解决上面的问题，Android提出了dip（device independent pixel)的概念，IOS上也有类似的概念。&lt;/p&gt;

&lt;p&gt;dip(device independent pixel), 也叫dp&lt;br&gt;
    意义：一个长度单位。1dp约等于1/160英寸。1dp代表的长度由屏幕厂商根据具体情况设定。&lt;/p&gt;

&lt;p&gt;通常Android开发者设置元素大小时不使用px作为单位。而是使用dp(即dip)作为单位。那么在不同设备上，显示的大小都会差不多。&lt;/p&gt;

&lt;h3&gt;devicePixelRatio&lt;/h3&gt;

&lt;p&gt;devicePixelRatio = 1dp的宽度 / 1px的宽度。&lt;br&gt;
意义：它的值带表1dp长度单位内有多少个物理像素。&lt;/p&gt;

&lt;p&gt;对于iPhone来说，非视网膜设备的devicePixelRatio为1，视网膜设备为2。
对Android来说，它们的devicePixelRatio从0.75 - 2不等。见下表。&lt;/p&gt;

&lt;h3&gt;dip长度的设定（我自己的理解）&lt;/h3&gt;

&lt;p&gt;1dp代表的长度，是由屏幕厂商根据屏幕参数决定的。iphone5的一个物理像素的宽度约为pc上的1/3，因此一个大小为12px的字体在iphone5上看比PC上只有三分之一的大小，这样必须看不见！因此Android开发者都会使用dp作为单位，我们希望12dp的字体在手机上能看的清，如果12dp的长度有24个物理像素，那字体应该看起来约为pc上的2/3。恩，这样可以接受，很好，那就1dp长度内有2个px吧，于是devicePixelRatio等于2。&lt;/p&gt;

&lt;p&gt;1dp的长度在各个设备下略有不同，但都约为1/160英寸，因此16dp的长度在各个屏幕下看大小略微不同，但也差不多。&lt;/p&gt;

&lt;h2&gt;移动端浏览器的秘密优化-单位转换&lt;/h2&gt;

&lt;p&gt;在进行Web开发时，我们通常还是使用百分比，或者px作为单位。但是移动端浏览器在渲染时，会根据devicePixelRatio转换长度。如iphone5的devicePixelRatio为2，网页中得一个字体为12px，那么在手机上渲染时，浏览器会重新计算这个字体的大小为2*12=24px。因此在字体看起来差不多大。&lt;/p&gt;

&lt;h2&gt;iphone5 vs iMac，实例分析&lt;/h2&gt;

&lt;p&gt;iphone5的dpi为326, iMac的dpi为102, 因此iphone5上16px的大小为iMac上的102/326 * 16 ~= 4.8，16px的字体如果不进行单位转换，在iphone5上看，好像iMac上的4.8px大。iphone5的devicePixelRatio为2，移动端浏览器渲染时，将16px的单位转为16dp，因此在iphone上看起来，好像是iMac上的4.8 * 2 ~= 10px。&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Mar 2014 00:00:00 +0800</pubDate>
        <link>http://melonhuang.github.io//css/2014/03/27/the-size-of-page-from-pc-to-mobile.html</link>
        <guid isPermaLink="true">http://melonhuang.github.io//css/2014/03/27/the-size-of-page-from-pc-to-mobile.html</guid>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>BFC神奇背后的原理</title>
        <description>&lt;p&gt;&lt;code&gt;BFC&lt;/code&gt;已经是一个耳听熟闻的词语了，网上有许多关于&lt;code&gt;BFC&lt;/code&gt;的文章，介绍了如何触发&lt;code&gt;BFC&lt;/code&gt;， 以及&lt;code&gt;BFC&lt;/code&gt;的一些用处（如清浮动，防止margin重叠等）。虽然我知道如何利用&lt;code&gt;BFC&lt;/code&gt;解决这些问题，但当别人问我&lt;code&gt;BFC&lt;/code&gt;是什么，我还是不能很有底气地解释清楚。于是这两天仔细阅读了CSS2.1 spec, 和许多文章，来全面地理解BFC：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;BFC&lt;/code&gt;是个什么？&lt;br&gt;&lt;/li&gt;
&lt;li&gt;哪些元素会生成&lt;code&gt;BFC&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BFC&lt;/code&gt;的神奇的作用，及背后的原理&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;一、BFC是什么？&lt;/h2&gt;

&lt;p&gt;在解释&lt;code&gt;BFC&lt;/code&gt;是什么之前，需要先介绍&lt;code&gt;Box&lt;/code&gt;, &lt;code&gt;Formatting context&lt;/code&gt;的概念。&lt;/p&gt;

&lt;h3&gt;Box: CSS布局的基本单位&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Box&lt;/code&gt;是CSS布局的对象和基本单位， 直观点来说，就是一个页面是由很多个&lt;code&gt;Box&lt;/code&gt;组成的。元素的类型和display属性，决定了这个&lt;code&gt;Box&lt;/code&gt;的类型。 不同类型的&lt;code&gt;Box&lt;/code&gt;， 会参与不同的&lt;code&gt;Formatting context&lt;/code&gt;(一个决定如何渲染文档的容器)，因此&lt;code&gt;Box&lt;/code&gt;内的元素会以不同的方式渲染。让我们看看有哪些盒子：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;block-level box&lt;/code&gt;: display属性为block, list-item, table的元素，会生成&lt;code&gt;block-level box&lt;/code&gt;。并且参与&lt;code&gt;block fomatting context&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;inline-level box&lt;/code&gt;: display属性为inline, inline-block, inline-table的元素，会生成&lt;code&gt;inline-level box&lt;/code&gt;。并且参与&lt;code&gt;inline formatting context&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;run-in box&lt;/code&gt;: css3中才有， 这儿先不讲了&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Formatting context&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Formatting context&lt;/code&gt;是W3C CSS2.1规范中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。  &lt;/p&gt;

&lt;p&gt;最常见的&lt;code&gt;Formatting context&lt;/code&gt;有&lt;code&gt;Block fomatting context&lt;/code&gt;(简称&lt;code&gt;BFC&lt;/code&gt;)和&lt;code&gt;Inline formatting context&lt;/code&gt;(简称&lt;code&gt;IFC&lt;/code&gt;)。&lt;/p&gt;

&lt;p&gt;CSS2.1 中只有&lt;code&gt;BFC&lt;/code&gt;和&lt;code&gt;IFC&lt;/code&gt;, CSS3中还增加了&lt;code&gt;GFC&lt;/code&gt;和&lt;code&gt;FFC&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;BFC 定义&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;BFC&lt;/code&gt;(&lt;code&gt;Block formatting context&lt;/code&gt;)直译为&amp;quot;块级格式化上下文&amp;quot;。它是一个独立的渲染区域，只有&lt;code&gt;Block-level box&lt;/code&gt;参与， 它规定了内部的&lt;code&gt;Block-level Box&lt;/code&gt;如何布局，并且与这个区域外部毫不相干。&lt;/p&gt;

&lt;h4&gt;BFC布局规则：&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;内部的&lt;code&gt;Box&lt;/code&gt;会在垂直方向，一个接一个地放置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Box&lt;/code&gt;垂直方向的距离由margin决定。属于同一个&lt;code&gt;BFC&lt;/code&gt;的两个相邻&lt;code&gt;Box&lt;/code&gt;的margin会发生重叠&lt;br&gt;&lt;/li&gt;
&lt;li&gt;每个元素的margin box的左边， 与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BFC&lt;/code&gt;的区域不会与&lt;code&gt;float box&lt;/code&gt;重叠。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BFC&lt;/code&gt;就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。&lt;/li&gt;
&lt;li&gt;计算&lt;code&gt;BFC&lt;/code&gt;的高度时，浮动元素也参与计算&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;二、哪些元素会生成BFC?&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;根元素&lt;/li&gt;
&lt;li&gt;float属性不为none&lt;/li&gt;
&lt;li&gt;position为absolute或fixed&lt;/li&gt;
&lt;li&gt;display为inline-block, table-cell, table-caption, flex, inline-flex&lt;/li&gt;
&lt;li&gt;overflow不为visible&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;三、BFC的作用及原理&lt;/h2&gt;

&lt;h3&gt;1. 自适应两栏布局&lt;/h3&gt;

&lt;p&gt;代码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nc&quot;&gt;.aside&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;150px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#f66&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nc&quot;&gt;.main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fcc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;aside&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;main&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;页面：&lt;br&gt;
&lt;img src=&quot;http://p1.qhimg.com/d/inn/4055c62a/4dca44a927d4c1ffc30e3ae5f53a0b79.png&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;

&lt;p&gt;根据&lt;code&gt;BFC&lt;/code&gt;布局规则第3条：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;每个元素的margin box的左边， 与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因此，虽然存在浮动的元素aslide，但main的左边依然会与包含块的左边相接触。&lt;/p&gt;

&lt;p&gt;根据&lt;code&gt;BFC&lt;/code&gt;布局规则第四条：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;BFC&lt;/code&gt;的区域不会与&lt;code&gt;float box&lt;/code&gt;重叠。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我们可以通过通过触发main生成&lt;code&gt;BFC&lt;/code&gt;， 来实现自适应两栏布局。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当触发main生成&lt;code&gt;BFC&lt;/code&gt;后，这个新的&lt;code&gt;BFC&lt;/code&gt;不会与浮动的aside重叠。因此会根据包含块的宽度，和aside的宽度，自动变窄。效果如下：&lt;br&gt;
&lt;img src=&quot;http://p6.qhimg.com/t01077886a9706cb26b.png&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;

&lt;h3&gt;2. 清除内部浮动&lt;/h3&gt;

&lt;p&gt;代码: &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.par&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fcc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nc&quot;&gt;.child&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#f66&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;par&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;child&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;child&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;页面：&lt;br&gt;
&lt;img src=&quot;http://p1.qhimg.com/t016035b58195e7909a.png&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;

&lt;p&gt;根据&lt;code&gt;BFC&lt;/code&gt;布局规则第六条：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;计算&lt;code&gt;BFC&lt;/code&gt;的高度时，浮动元素也参与计算&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;为达到清除内部浮动，我们可以触发par生成&lt;code&gt;BFC&lt;/code&gt;，那么par在计算高度时，par内部的浮动元素child也会参与计算。&lt;/p&gt;

&lt;p&gt;代码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.par&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果如下：&lt;br&gt;
&lt;img src=&quot;http://p2.qhimg.com/t016bbbe5236ef1ffd5.png&quot; alt=&quot;此处输入图片的描述&quot;&gt;
￼&lt;/p&gt;

&lt;h3&gt;3. 防止垂直margin重叠&lt;/h3&gt;

&lt;p&gt;代码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#f55&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fcc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;line-height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Haha&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Hehe&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;页面：&lt;br&gt;
&lt;img src=&quot;http://p5.qhimg.com/t01b47b8b7d153c07cc.png&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;

&lt;p&gt;两个p之间的距离为100px，发送了margin重叠。&lt;br&gt;
根据BFC布局规则第二条：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Box&lt;/code&gt;垂直方向的距离由margin决定。属于同一个&lt;code&gt;BFC&lt;/code&gt;的两个相邻&lt;code&gt;Box&lt;/code&gt;的margin会发生重叠  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我们可以在p外面包裹一层容器，并触发该容器生成一个&lt;code&gt;BFC&lt;/code&gt;。那么两个P便不属于同一个&lt;code&gt;BFC&lt;/code&gt;，就不会发生margin重叠了。&lt;br&gt;
代码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.wrap&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#f55&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fcc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;line-height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Haha&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wrap&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Hehe&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果如下:&lt;br&gt;
&lt;img src=&quot;http://p3.qhimg.com/t0118d1d2badbb00521.png&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;

&lt;h2&gt;总结&lt;/h2&gt;

&lt;p&gt;其实以上的几个例子都体现了&lt;code&gt;BFC&lt;/code&gt;布局规则第五条：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;BFC&lt;/code&gt;就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因为&lt;code&gt;BFC&lt;/code&gt;内部的元素和外部的元素绝对不会互相影响，因此， 当&lt;code&gt;BFC&lt;/code&gt;外部存在浮动时，它不应该影响&lt;code&gt;BFC&lt;/code&gt;内部Box的布局，&lt;code&gt;BFC&lt;/code&gt;会通过变窄，而不与浮动有重叠。同样的，当&lt;code&gt;BFC&lt;/code&gt;内部有浮动时，为了不影响外部元素的布局，&lt;code&gt;BFC&lt;/code&gt;计算高度时会包括浮动的高度。避免margin重叠也是这样的一个道理。  &lt;/p&gt;
</description>
        <pubDate>Fri, 10 Jan 2014 00:00:00 +0800</pubDate>
        <link>http://melonhuang.github.io//css/2014/01/10/the-magic-bfc.html</link>
        <guid isPermaLink="true">http://melonhuang.github.io//css/2014/01/10/the-magic-bfc.html</guid>
        
        
        <category>css</category>
        
      </item>
    
  </channel>
</rss>
